% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_model.R
\name{getModelFit}
\alias{getModelFit}
\title{fit a linear model to the measurements of each gene}
\usage{
getModelFit(
  y,
  metadata,
  period = 24,
  nKnots = 4,
  timeColname = "time",
  condColname = NULL,
  covarColnames = NULL,
  nShifts = 3,
  method = c("trend", "voom"),
  lmFitArgs = list(),
  eBayesArgs = if (method == "trend") list(trend = TRUE) else list()
)
}
\arguments{
\item{y}{a matrix-like data object where each row is a gene and each column
corresponds to a time sample.}

\item{metadata}{a data.table specifying experimental design information for
each sample. Each row is a sample and metadata given in columns.}

\item{period}{number specifying the period for periodic time variable.
Must be same unit as sample timepoints.}

\item{nKnots}{number of knots or internal breakpoints of periodic spline}

\item{timeColname}{string of column in \code{metadata} with times samples
were acquired.}

\item{condColname}{string of column in \code{metadata} with condition/group
names(if any) for each sample}

\item{covarColnames}{string vector of covariate column names in \code{metadata}
to include in linear model}

\item{nShifts}{number of times to offset or shift time vector. Model will fit
data using each new shifted time vector.}

\item{method}{string indicating the fitting method for limma \code{mFit}.
Takes one of \verb{‘trend’ and ‘voom’}}

\item{lmFitArgs}{list of arguments for limma \code{lmFit}}

\item{eBayesArgs}{list of arguments for \code{limma::eBayes}}
}
\value{
a \code{LimoRhyde2} class object with the results of
\code{limma::lmFit} including:
\itemize{
\item \code{coefficients} a matrix with rows for each feature.
Columns are coefficient estimates for \code{nShift} fitted models.
}
}
\description{
Given a data matrix where each row is a gene and each column is a time sample,
\code{getModelFit} returns a list object from fitting a linear model to the
expression of each gene. To create the linear model, the function decomposes
a periodic time variable into multiple linear components based on sine and
cosine terms or periodic spline terms of the same period.
}
